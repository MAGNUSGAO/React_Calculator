{"version":3,"sources":["App.js","reportWebVitals.js","index.js","Main.js"],"names":["App","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","useState","inputvalue","setinputvalue","display","value","undefined","clear","calculate","answer","eval","className","colSpan","type","onClick"],"mappings":"wNAUeA,MANf,WACE,OACE,cAACC,EAAA,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,25BCXA,SAASD,OAEL,cAAoCe,sDAApC,iNAAOC,WAAP,cAAmBC,cAAnB,cACA,SAASC,QAAQC,GAETF,mBADcG,IAAfJ,WACeA,WAAaG,EAEbA,GAKtB,SAASE,QACLJ,cAAc,IAGlB,SAASK,YAEL,IACI,IAAIC,OAASC,KAAKR,YACpB,eACEO,OAAS,iBAGbN,cAAcM,QAGlB,OACI,kEAAKE,UAAU,6BAAf,SACI,mEAAKA,UAAU,+CAAf,UACI,yFACA,+EAEI,4EACI,iEAAIC,QAAQ,IAAZ,SAAgB,oEAAOC,KAAK,OAAOR,MAAOH,eAC1C,0EAAI,qEAAQY,QAAS,WAAKP,SAAtB,oBAER,4EAEI,0EAAI,qEAASO,QAAS,WAAKV,QAAQ,MAA/B,iBACJ,0EAAI,qEAASU,QAAS,WAAKV,QAAQ,MAA/B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,oBAER,4EACI,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,oBAER,4EACI,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,oBAER,4EAEA,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,0EAAI,qEAAQU,QAAS,WAAKV,QAAQ,MAA9B,iBACJ,iEAAIQ,QAAQ,IAAZ,SAAgB,qEAAQE,QAAS,WAAKN,aAAtB,4BAQrBtB,6B","file":"static/js/main.efcd924d.chunk.js","sourcesContent":["// import boostrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport Main from './Main'\n\nfunction App() {\n  return (\n    <Main></Main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nimport React, { useState } from \"react\";\nimport boostrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\n\nfunction Main(){\n    // Hook, take note\n    const [inputvalue, setinputvalue] = useState();\n    function display(value){\n        if(inputvalue !== undefined){\n            setinputvalue(inputvalue + value)\n        } else {\n            setinputvalue(value)\n        }\n        \n    }\n\n    function clear(){\n        setinputvalue('');\n    }\n\n    function calculate(){\n        // eval evaluates the expression\n        try{\n            var answer = eval(inputvalue)\n        } catch{\n            answer = \"Cannot Compute\"\n        }\n        \n        setinputvalue(answer);\n    }\n    \n    return (\n        <div className='row justify-content-center'>\n            <div className='col-md-4 shadow-lg p-3 mb-4 bg-white rounded'>\n                <h1>Calculator</h1>\n                <table>\n                    {/* // TR means one row  TD means table data colSpan determines how wide the space is*/}\n                    <tr>\n                        <td colSpan='4'><input type=\"text\" value={inputvalue}/></td>\n                        <td><button onClick={()=>{clear()}}>C</button></td>\n                    </tr>\n                    <tr>\n                    {/* // When even we pass in parameters we have to use arrow function */}\n                        <td><button  onClick={()=>{display('1')}}>1</button></td>\n                        <td><button  onClick={()=>{display('2')}}>2</button></td>\n                        <td><button onClick={()=>{display('3')}}>3</button></td>\n                        <td><button onClick={()=>{display('/')}}>/</button></td>\n                        <td><button onClick={()=>{display('(')}}>(</button></td>\n                    </tr>\n                    <tr>\n                        <td><button onClick={()=>{display('4')}}>4</button></td>\n                        <td><button onClick={()=>{display('5')}}>5</button></td>\n                        <td><button onClick={()=>{display('6')}}>6</button></td>\n                        <td><button onClick={()=>{display('-')}}>-</button></td>\n                        <td><button onClick={()=>{display(')')}}>)</button></td>\n                    </tr>\n                    <tr>\n                        <td><button onClick={()=>{display('7')}}>7</button></td>\n                        <td><button onClick={()=>{display('8')}}>8</button></td>\n                        <td><button onClick={()=>{display('9')}}>9</button></td>\n                        <td><button onClick={()=>{display('+')}}>+</button></td>\n                        <td><button onClick={()=>{display('.')}}>.</button></td>\n                    </tr>\n                    <tr>\n                   \n                    <td><button onClick={()=>{display('0')}}>0</button></td>\n                    <td><button onClick={()=>{display('%')}}>%</button></td>\n                    <td><button onClick={()=>{display('*')}}>*</button></td>\n                    <td colSpan='2'><button onClick={()=>{calculate()}}>=</button></td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Main;"],"sourceRoot":""}